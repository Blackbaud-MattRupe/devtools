#!/usr/bin/env bash
# Adapted from http://blog.blindgaenger.net/colorize_maven_output.html

function colormvn()
{
	# Declare variables local so sourcing the settings file doesn't pollute the environment
	local BuildBanner
	local Error
	local Goal
	local Info
	local Success
	local Warning

	local settings_file="$HOME/.colormvn"
	if [ -e "$settings_file" ]
	then
		source "$settings_file"
	fi

	# Give reasonable defaults
	BuildBanner=${BuildBanner:-"$(tput setaf 7)"}
	Error=${Error:-"$(tput bold)$(tput setaf 1)"}
	Goal=${Goal:-"$(tput setaf 6)"}
	Info=${Info:-"$(tput setaf 4)"}
	Success=${Success:-"$(tput bold)$(tput setaf 2)"}
	Warning=${Warning:-"$(tput bold)$(tput setaf 3)"}
	Failure=${Failure:-$Error}

	local Reset="$(tput sgr0)"
	
	# Regular expressions get ugly fast, so increase readability with variables.
	local WarningPattern='^\[WARNING\].*$'
	local WarningReplace="${Warning}&${Reset}"
	
	local ErrorPattern='^\[ERROR\].*$'
	local ErrorReplace="${Error}&${Reset}"

	local GoalPattern='^\(\[INFO\] \)\(--- .*$\)'
	local GoalReplace="${Info}\1${Reset}${Goal}\2${Reset}"
	
	local BuildBannerPattern='^\(\[INFO\] \)\(Building .*\)$'
	local BuildBannerReplace="${Info}\1${Reset}${BuildBanner}\2${Reset}"
	
	local InfoPattern='^\[INFO\].*$'
	local InfoReplace="${Info}&${Reset}"

	local SuccessPattern='\(BUILD SUCCESS\|SUCCESS\)\(.*\)'
	local SuccessReplace="${Success}\1${Reset}${Info}\2${Reset}"
	
	local FailurePattern='\(BUILD FAILURE\|FAILURE\)\(.*\)'
	local FailureReplace="${Failure}\1${Reset}${Info}\2${Reset}"
	
	local SkippedPattern='\(SKIPPED\)\(.*\)'
	local SkippedReplace="${Warning}\1${Reset}${Info}\2${Reset}"

	# This is gross, but it works!
	# IMPORTANT: Order matters.
	mvn $@ | sed \
		-e "s:$WarningPattern:$WarningReplace:" \
		-e "s:$ErrorPattern:$ErrorReplace:" \
		-e "s:$GoalPattern:$GoalReplace:" \
		-e "s:$BuildBannerPattern:$BuildBannerReplace:" \
		-e "s:$InfoPattern:$InfoReplace:" \
		-e "s:$SuccessPattern:$SuccessReplace:" \
		-e "s:$FailurePattern:$FailureReplace:" \
		-e "s:$SkippedPattern:$SkippedReplace:" \
	        -e "s:BUILD FAILURE:HODOR! HODOR! HODOR!:g" \
	        -e "s:WARNING:HODOR?:g" \
	        -e "s:INFO:Hodor:g" \
	        -e "s:SKIPPED:Hodor?:g" \
	        -e "s:ERROR:HODOR!:g" \
	        -e "s:BUILD SUCCESS:Hodor! Hodor! Hodor!:g" \
	        -e "s:goal:Hodor:g" \
	        -e "s:lifecycle:Hodor:g" \
	        -e "s:project:Hodor:g" \
	        -e "s:Build:Hodor:g" \
	        -e "s:Copying:Hodoring:g" \
	        -e "s:Deleting:Hodoring:g" \
	        -e "s:Configured:Hodored:g" \
	        -e "s:Expanding:Hodoring:g" \
	        -e "s:Compiling:Hodoring:g" \
	        -e "s:Retreiving:Hodoring:g" \
	        -e "s:Installing:Hodoring:g" \
	        -e "s:Unpacking:Hodoring:g" \
	        -e "s:Artifact:Hodor:g" \
	        -e "s:milestone:Hodor:g" \
	        -e "s:Reactor:Hodor:g" \
	        -e "s:Test:Hodor:g"


	
	echo "$Reset"
}

colormvn "$@"
